server:
  # Porta "GENERALE" di riferimento dei MicroServizi
  port: 8090

spring:
  application:
    name: gateway
  cloud:
    gateway:
      routes:
        # il trattino indica che sotto routes: avremo blocchi di route (simil array)
        - id: mspost
          # lb sta per LoadBalancer // permette di accoppiare il nome dell'appliazione MS con l'indirizzo
          # va a recuperare da Discovery l'indirizzo
          # come uri non metto http:.. ma il nome dell'applicazione:
          # il gateway contatta
          uri: lb://mspost # http://localhost:xxxxx
          predicates:
            # Posso impostare un array di stringhe
            #- Path=/post/**, /posts/**
            - Path=/post/**
        - id: msuser
          uri: lb://msuser # http://localhost:xxxxx
          predicates:
            - Path=/user/**
        - id: mscomment
          uri: lb://mscomment # http://localhost:xxxxx
          predicates:
            - Path=/mscomment/**
        - id: msrating
          uri: lb://msrating # http://localhost:xxxxx
          predicates:
            - Path=/msrating/**
        - id: msbackup
          uri: lb://msbackup
          predicates:
            - Path=/backup/**
# Il Prof non ha zipkin: ...
# Indichiamo la posizione di zipkin
  zipkin:
    base-url: http://localhost:9411
    sender.type: web
  sleuth.sampler.probability: 1

eureka:
  client:
    service-url:
      # indica la posizione di Eureka a cui l'app deve fare riferimento
      # di solito viene passata come variabile d'ambiente
      default-zone: http://localhost:8761/eureka

# Livello di logging (ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF)
logging:
  level:
    # indicando i vari sotto-package possiamo adottare granulometrie diverse
    org:
      springframework:
        cloud:
          gateway: trace
        web:
          server: trace

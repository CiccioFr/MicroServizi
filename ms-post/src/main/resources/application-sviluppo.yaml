server:
  # settare la porta a 0 indica di impostare la prima porta disponibile
  # il GateWay si occuperà di reindirizzare alla porta opportuna
  port: 0
  tomcat:
    basedir: /Users/Public/myblog/temp/
  servlet:
    # EndPoint
    context-path: /post

spring:
  application:
    name: mspost
  jackson:
    serialization:
      indent-output: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ms_post?createDatabaseIfNotExist=true&characterEncoding=UTF-8&autoReconnect=true&useSLL=false&useLegacyDatetimeCode=false
    username: root
    password:
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        '[format_sql]': true
    show-sql: true
    # generate-ddl: true
  # Indichiamo la posizione di zipkin
  zipkin:
    base-url: http://localhost:9411
    sender.type: web
  sleuth.sampler.probability: 1
eureka:
  client:
    service-url:
      default-zone: http://localhost:8761/eureka
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 6
    registry-fetch-interval-seconds: 5

# Actuator - lo stato di salute del MicroServizio
# http://{host}:{gateway port}/{context-path}/actuator/health
# http://localhost:8090/post/actuator/health
management:
  health:
    # Circuit Breaker - Abilitazione
    circuit-breakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health # mostrami health
  endpoint:
    health:
      show-details: always # quando mostrarli

# Circuit Breaker - Impostazioni
# nel caso il MS chiamato non risponda o ci metta troppo tempo
resilience4j.circuitbreaker:
  instances:
    a-tempo:
      register-health-indicator: true
      # Chiusura del circuito se la request impiega più tempo di quanto stimato
      sliding-window-type: TIME_BASED
      # Numero di tentativi di request
      sliding-window-size: 1
      # Soglia - in percentuale - di fallimenti (se al 100%, basta che la chiamata al microservizio fallisca una volta sola)
      slow-call-rate-threshold: 100
      # Un'interazione è considerata lenta se impiega più di n secondi a rispondere
      slow-call-duration-threshold: 2s
      # Tempo per il quale permane lo stato HALF_OPEN
      wait-duration-in-open-state: 60s
      minimum-number-of-calls: 1
      # Numero massimo di request permesse in stato HALF_OPEN
      permitted-number-of-calls-in-half-open-state: 1
      # la transizione è abilitata in modo automatico
      automatic-transition-from-open-to-half-open-enabled: true
    a-tentativi:
      register-health-indicator: true
      # Chiusura del circuito se la request fallisce n volte
      sliding-window-type: COUNT_BASED
      # Numero di tentativi di request
      sliding-window-size: 1
      # Soglia - in percentuale - di fallimenti (se al 100%, basta che la chiamata al microservizio fallisca una volta sola)
      failure-rate-threshold: 100
      wait-duration-in-open-state: 60s
      permitted-number-of-calls-in-half-open-state: 3
      automatic-transition-from-open-to-half-open-enabled: true

# Caricamento immagine - CUSTOM PROPERTIES
post:
  width: 2000
  height: 2000
  # in bytes # Tomcat ha un limite di 2 mega, oltre necessita di configurazioni specifiche
  size: 1024000
  # con le virgole genera un array
  extensions: jpg,jpeg,gif,png
  path: /Users/Public/myblog/images/

# Livello di logging (ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF)
logging:
  level:
    # indicando i vari sotto-package possiamo adottare granulometrie diverse
    it:
      cgmconsulting:
        mspost: trace
    org:
      springframework: info
      hibernate:
        #stat: debug
        type:
          descriptor:
            sql:
              BasicBinder: trace
